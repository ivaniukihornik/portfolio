{"name": "test_text_correctness[FOOTER_ANIMATION_3-en]", "status": "failed", "statusDetails": {"message": "AssertionError: Text of FOOTER_ANIMATION_3 element is incorrect\nassert '*According t...2019, n=5000.' == '*According t...2019, n=5000.'\n  \n  - *According to Internet Audience Research by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.\n  ?                                      -\n  + *According to Internet Audience Reseach by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.", "trace": "self = <UkrNet.tests.test_login_page.TestLoginPage object at 0x7ce37c45dc00>, open_login_page = <UkrNet.page_objects.login_page.LoginPage object at 0x7ce37c36e3e0>\nlanguage = 'en', element = 'FOOTER_ANIMATION_3'\n\n    @allure.suite('Page layout')\n    @allure.testcase('https://app.qase.io/case/PF-8', 'Text correctness')\n    @allure.severity('minor')\n    @pytest.mark.parametrize('language', ALL_LANGUAGES)\n    @pytest.mark.parametrize('element', ALL_TEXT_ELEMENTS)\n    def test_text_correctness(self, open_login_page, language, element):\n        login_page = open_login_page\n        with allure.step(f'Set \"{language}\" language'):\n            login_page.set_language(language)\n        with allure.step(f'Check text of {element} element'):\n            expected_text = ER.get_expected_text(language)[element]\n            actual_text = login_page.get_text_of_element(element)\n            login_page._make_screenshot()\n>           assert actual_text == expected_text, f'Text of {element} element is incorrect'\nE           AssertionError: Text of FOOTER_ANIMATION_3 element is incorrect\nE           assert '*According t...2019, n=5000.' == '*According t...2019, n=5000.'\nE             \nE             - *According to Internet Audience Research by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.\nE             ?                                      -\nE             + *According to Internet Audience Reseach by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.\n\nUkrNet/tests/test_login_page.py:81: AssertionError"}, "steps": [{"name": "Set \"en\" language", "status": "passed", "start": 1719238829153, "stop": 1719238829191}, {"name": "Check text of FOOTER_ANIMATION_3 element", "status": "failed", "statusDetails": {"message": "AssertionError: Text of FOOTER_ANIMATION_3 element is incorrect\nassert '*According t...2019, n=5000.' == '*According t...2019, n=5000.'\n  \n  - *According to Internet Audience Research by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.\n  ?                                      -\n  + *According to Internet Audience Reseach by Opinion Software Media (InMind Opinion Media LLC), April 2019, n=5000.\n", "trace": "  File \"/home/ubuntu/PycharmProjects/UkrNet_portfolio/UkrNet/tests/test_login_page.py\", line 81, in test_text_correctness\n    assert actual_text == expected_text, f'Text of {element} element is incorrect'\n"}, "attachments": [{"name": "Screenshot", "source": "0c1b4666-9164-45d6-a7bc-a82c7360a799-attachment.png", "type": "image/png"}], "start": 1719238829191, "stop": 1719238832360}], "parameters": [{"name": "element", "value": "'FOOTER_ANIMATION_3'"}, {"name": "language", "value": "'en'"}], "start": 1719238829153, "stop": 1719238832360, "uuid": "5310ad07-f882-4af7-963d-316c69e9d724", "historyId": "f57b04667bfc324091176b6834115732", "testCaseId": "b6b6b8ff9a2f3263c15d73ab9a8151a1", "fullName": "UkrNet.tests.test_login_page.TestLoginPage#test_text_correctness", "labels": [{"name": "suite", "value": "Page layout"}, {"name": "severity", "value": "minor"}, {"name": "parentSuite", "value": "Login Page"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "ASUS"}, {"name": "thread", "value": "10022-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "UkrNet.tests.test_login_page"}], "links": [{"type": "tms", "url": "https://app.qase.io/case/PF-8", "name": "Text correctness"}]}